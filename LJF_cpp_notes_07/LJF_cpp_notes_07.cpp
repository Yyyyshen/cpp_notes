// LJF_cpp_notes_07.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>

//应用实践

//本例总结
// 
//项目起始阶段 认真做需求分析，应用设计模式和原则，得出灵活可扩展的面向对象系统
//C++ 项目里最好有核心头文件，集中定义所有标准头、语言特性、宏定义等，规范使用，搭好架构
//原子变量实现自旋锁，比互斥量成本低，更高效
//使用ZMQ简化网络通信，注意异常处理
//使用Lua脚本语言进行混合开发
//理解、用好C++特性，适当使用final、default、const等关键字，代码更安全，可读性高，利于维护
//

//惯用代码规范
// 
//空行分隔逻辑段落
//类名用CamelCase，函数和变量用snake_case，根据变量类型添加前缀，如成员变量用 m_
//在编译阶段使用静态断言，保证整数、浮点数精度
//不需要继承的类使用final，禁止外界产生子类
//使用default显式定义拷贝构造、拷贝赋值、转移构造、转移赋值等重要函数（尤其需要存入容器的对象类型，填入容器时会拷贝，显式声明转移函数可以节约很多性能）
//使用委托构造编写多个不同形式的构造
//成员变量在声明时直接初始化
//using定义类型别名，调整时减少修改
//适当使用const修饰常函数
//明确知道不抛异常的函数标记为noexcept进行优化
//

using namespace std;

//
//书店应用（C++ Primer中例子参考）
//

//
//项目功能
// 销售记录管理
// 多渠道获取书号、销售册数、销售额
// 简单统计分析
// 数据定期上报
//

int main()
{
    std::cout << "Hello World!\n";
}
